# -*- shell-script -*-
#
# Copyright © 2011 Cisco Systems, Inc.  All rights reserved.
#
# See COPYING in top-level directory.
# 
# Additional copyrights may follow
# 
# $HEADER$
#

AC_INIT([cci], 
        [m4_normalize(esyscmd([config/cci_get_version.sh VERSION --base]))],
        [http://www.google.com/], [cci])
AC_PREREQ([2.68])
AC_CONFIG_AUX_DIR([./config])
# Note that this directory must *exactly* match what was specified via
# -I in ACLOCAL_AMFLAGS in the top-level Makefile.am.
AC_CONFIG_MACRO_DIR([./config])

CCI_CONFIGURE_SETUP

cci_show_title "Configuring CCI distribution tarball"

# Init automake
AM_INIT_AUTOMAKE([1.11 dist-bzip2 subdir-objects foreign tar-ustar -Wall -Werror])
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

# Libtool2 is needed
m4_ifdef([LT_PREREQ], [],
	 [m4_fatal([libtool version 2.2.6 or higher is required], [63])])
LT_PREREQ([2.2.6])

# Make configure depend on the VERSION file, since it's used in AC_INIT
AC_SUBST([CONFIGURE_DEPENDENCIES], ['$(top_srcdir)/VERSION'])

# Get the version of cci that we are installing
AC_MSG_CHECKING([for cci version])
CCI_VERSION="`$srcdir/config/cci_get_version.sh $srcdir/VERSION`"
CCI_MAJOR_VERSION="`$srcdir/config/cci_get_version.sh $srcdir/VERSION --major`"
CCI_MINOR_VERSION="`$srcdir/config/cci_get_version.sh $srcdir/VERSION --minor`"
CCI_RELEASE_VERSION="`$srcdir/config/cci_get_version.sh $srcdir/VERSION --release`"
CCI_REPO_REV="`$srcdir/config/cci_get_version.sh $srcdir/VERSION --repo-rev`"
CCI_RELEASE_DATE="`$srcdir/config/cci_get_version.sh $srcdir/VERSION --release-date`"
AC_SUBST(CCI_VERSION)
AC_SUBST(CCI_REPO_REV)
AC_SUBST(CCI_RELEASE_DATE)
AC_DEFINE_UNQUOTED([CCI_MAJOR_VERSION], [$CCI_MAJOR_VERSION],
    [Major version of cci])
AC_DEFINE_UNQUOTED([CCI_MINOR_VERSION], [$CCI_MINOR_VERSION],
    [Minor version of cci])
AC_DEFINE_UNQUOTED([CCI_RELEASE_VERSION], [$CCI_RELEASE_VERSION],
    [Release version of cci])
AC_MSG_RESULT([$CCI_VERSION])

# Override/fixup the version numbers set by AC_INIT, since on
# developer builds, there's no good way to know what the version is
# before running configure :(.  We only use the base version number
# (ie, no svn r numbers) for the version set in AC_INIT.  This will
# always match reality because we add the VERSION file (the only way
# to change the major.minor.release{greek}) into the configure
# dependencies.

PACKAGE_VERSION="$CCI_VERSION"
PACKAGE_STRING="${PACKAGE_NAME} ${PACKAGE_VERSION}"
VERSION="${PACKAGE_VERSION}"

# For standalone configurations, we also include a .so version number.

. $srcdir/VERSION
AC_SUBST([libcci_so_version])

# Setup the header file
AH_TOP([/* -*- c -*-
 *
 * Copyright © 2010 Cisco Systems, Inc.  All rights reserved.
 * $COPYRIGHT$
 * 
 * Additional copyrights may follow
 * 
 * $HEADER$
 *
 * This file is automatically generated by configure.  Edits will be lost
 * the next time you run configure!
 */

#ifndef CCI_CONFIGURE_H
#define CCI_CONFIGURE_H
])
AH_BOTTOM([
#endif /* CCI_CONFIGURE_H */
])

# Setup C compiler

CFLAGS_save="$CFLAGS"
AC_PROG_CC
AM_PROG_CC_C_O
CFLAGS="$CFLAGS_save"

# Define cci's configure arguments
CCI_DEFINE_ARGS

# If debug mode, add -g
AS_IF([test "$cci_debug" = "1"],
      [CFLAGS="$CFLAGS -g"])

# Setup the cci core
CCI_SETUP_CORE([], [], [AC_MSG_ERROR([Cannot continue])], [1])

# Default to shared library yet
AM_ENABLE_SHARED
AM_DISABLE_STATIC

# Setup libtool / libltdl.  No need for Fortran, etc.
cci_show_title "Configuring libtool / libltdl"
LT_CONFIG_LTDL_DIR([src/libltdl])
LT_INIT([dlopen win32-dll])
LTDL_INIT([subproject convenience])
LT_LANG([C])

# Party on
AC_OUTPUT
